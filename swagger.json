{
  "openapi": "3.0.0",
  "info": {
    "title": "prod - tutorApp",
    "description": "Production url endpoints",
    "contact": {},
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://tutor-app-v1.vercel.app/",
      "variables": {}
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "register // take note of the tutuor boolean property while signing up so you can use it for conditional rendering",
        "operationId": "register",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/registerrequest"
                  },
                  {
                    "example": {
                      "username": "Mhyke",
                      "email": "mhyke.badmus@gmail.com",
                      "password": "Mhyke"
                    }
                  }
                ]
              },
              "example": {
                "username": "Mhyke",
                "email": "mhyke.badmus@gmail.com",
                "password": "Mhyke"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/auth/confirmemail": {
      "post": {
        "tags": ["auth"],
        "summary": "link sent to email to complete signup",
        "operationId": "clickToCompleteSignUp",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/resetLink": {
      "post": {
        "tags": ["password-reset"],
        "summary": "send password rest link",
        "operationId": "resetPassword",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/resetPasswordRequest"
                  },
                  {
                    "example": {
                      "email": "farindemoses@gmail.com"
                    }
                  }
                ]
              },
              "example": {
                "email": "farindemoses@gmail.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/auth/resetPassword": {
      "post": {
        "tags": ["password-reset"],
        "summary": "setNewPassword",
        "operationId": "setNewPassword",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/setNewPassword"
                  },
                  {
                    "example": {
                      "newPassword": "mike"
                    }
                  }
                ]
              },
              "example": {
                "newPassword": "mike"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "login",
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/loginrequest"
                  },
                  {
                    "example": {
                      "email": "micheal.badmus@gmail.com",
                      "password": "Mhyke"
                    }
                  }
                ]
              },
              "example": {
                "email": "micheal.badmus@gmail.com",
                "password": "Mhyke"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": []
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "this will return an object containing your info/profile details, you can make this request once you log in",
        "operationId": "getsmyinfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/get-tutors": {
      "get": {
        "tags": ["user"],
        "summary": "As a guardian who signed in, this will get you a list of all users signed up as tutors, if a specific id is included as a query parameter e.g /?userID=\"id\", it will return only that specific user/tutor",
        "operationId": "getalltutors",
        "parameters": [
          {
            "name": "userID",
            "in": "query",
            "description": "ID of the object to fetch",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/chats/{user2ID}": {
      "get": {
        "tags": ["chats"],
        "summary": "when you now click on one of them, it will take you to a chat page and getChats request would be sent with user2ID in the route param, returning your chat entry with the person, it will be an empty array if there is no chat history",
        "operationId": "getOurChats",
        "parameters": [
          {
            "name": "user2ID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645f835a7d15b93c27f16343"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/user/updateprofile": {
      "patch": {
        "tags": ["user"],
        "summary": "use this to add additional field to user after email confirmation.",
        "operationId": "updateprofile",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "example": {
                      "sex": "female",
                      "subjects": ["maths", "physics"]
                    }
                  }
                ]
              },
              "example": {
                "sex": "female",
                "subjects": ["maths", "physics"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/chats/sendmessage": {
      "post": {
        "tags": ["chatsPage"],
        "summary": "use this to exchange message on chat page",
        "operationId": "sendText",
        "parameters": [],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/sendText"
                  },
                  {
                    "example": {
                      "user2ID": "645f835a7d15b93c27f16343",
                      "message": "hi there"
                    }
                  }
                ]
              },
              "example": {
                "user2ID": "645f835a7d15b93c27f16343",
                "message": "hi there"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/chats/addunreadmessage/{user2ID}": {
      "patch": {
        "tags": ["chatsPage"],
        "summary": "in case you send a message to someone who isn't online, this request would be sent to add to that person's list of unread messages(so include the person id as a param and the message in the request body), b4 u wonder how the person now gets it once logged in, an \"unread_messages\" field has been auto added to every exisitng profile, so once you make a request to /getcurrentuser once loggedin, that property comes with it, it's an array, empty by default.",
        "operationId": "sendunresdmessage",
        "parameters": [
          {
            "name": "user2ID",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "example": "645f835a7d15b93c27f16343"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "message": "hi there"
                }
              },
              "example": {
                "user2ID": "645f835a7d15b93c27f16343",
                "message": "hi there"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "headers": {}
          }
        },
        "deprecated": false,
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "sendText": {
        "title": "sendText",
        "required": ["user2ID", "message"],
        "type": "object",
        "properties": {
          "user2ID": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "user2ID": "645f835a7d15b93c27f16343",
          "message": "hi there"
        }
      },
      "loginrequest": {
        "title": "loginrequest",
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "email": "micheal.badmus@gmail.com",
          "password": "Mhyke"
        }
      },
      "registerrequest": {
        "title": "register",
        "required": ["username", "email", "password"],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "subject": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tutor": {
            "type": "boolean",
            "description": ""
          }
        },
        "example": {
          "username": "Mhyke",
          "email": "mhyke.badmus@gmail.com",
          "password": "Mhyke",
          "subjects": ["Math", "Physics", "Biology"]
        }
      },
      "resetPasswordRequest": {
        "title": "resetPasswordRequest",
        "required": ["email"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "example": {
          "email": "farindemoses@gmail.com"
        }
      },
      "setNewPassword": {
        "title": "setNewPassword",
        "required": ["newPassword"],
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string"
          }
        },
        "example": {
          "newPassword": "mike"
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [],
  "tags": [
    {
      "name": "password-reset",
      "description": ""
    },
    {
      "name": "auth",
      "description": ""
    },
    {
      "name": "user",
      "description": "user-routes"
    }
  ]
}
